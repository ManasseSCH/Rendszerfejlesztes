@model IEnumerable<Rendszerfejl.Models.TopicModel>


<header> @Html.Partial("~/Views/Shared/_navbar.cshtml") <h1 align="right" id="webSocketResponse">asd</h1></header>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TypeId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TypeId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                    <a href="/Topic/AddFavourite/@item.Id" class="btn btn-primary">Add favourite</a>
                <a href="/Comment/ViewComments/@item.Id" class="btn btn-primary">Read comments</a>
                    <a href="/Comment/CreateComment/@item.Id" class="btn btn-primary">Create comment</a>
                   
            </td>
        </tr>
}
    </tbody>
</table>
<p></p>
 <form asp-controller="Topic" asp-action="ShowMyComments" method="post">
     <input type="submit" value="Comments related posts" class="btn btn-primary" />
 </form>


<script>
    //Amennyiben itt hiba lépne fel, az a szerver oldali hiba miatt van, mivel a szerver oldalon futó websocket szerver nem tudja kiszolgálni a kérést
    const socket = new WebSocket("wss://localhost:7062/ws");//létrehozunk egy socketet, ami a szerverrel fog kommunikálni

    socket.onopen = (event) => {//létrehozunk egy eventet, ami a szerver válaszát fogja tartalmazni, amit a szerver küldött csatlakozáskor
        //console.log("WebSocket connection established.");
        let webSocketResponse = document.getElementById("webSocketResponse");
        webSocketResponse.innerHTML = `Ezt kaptam a szervertől: ${event.data}`;
    };

    socket.onmessage = (event) => {//létrehozunk egy eventet, ami a szerver válaszát fogja tartalmazni, amit a szerver küldött
        //console.log(event.data)
        let webSocketResponse = document.getElementById("webSocketResponse");
        webSocketResponse.innerHTML = `Ezt kaptam a szervertől: ${event.data}`;
    };

    socket.onclose = (event) => {//létrehozunk egy eventet, ami a szerver válaszát fogja tartalmazni, amit a szerver küldött lecsatlakozáskor
        if (event.wasClean) {
            //console.log(`WebSocket connection closed cleanly, code=${event.code}, reason=${event.reason}`);
        } else {
            //console.error(`WebSocket connection died`);
        }
    };

    function sendMessage(message) {//létrehozunk egy függvényt, ami elküldi a szervernek a paraméterként kapott üzenetet
        socket.send(message);
    }



</script>

