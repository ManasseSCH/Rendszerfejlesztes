@using Microsoft.AspNetCore.Http
@model IEnumerable<Rendszerfejl.Models.TopicModel>


    
<header> @Html.Partial("~/Views/Shared/_navbar.cshtml") <div align="right"><h1 id="webSocketResponse">@ViewBag.sessionData</h1><button  onclick="myfunc()" size="100 px">OK</button></div></header>
<div id="targetArea">
    
</div>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TypeId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TypeId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                    <a href="/Topic/AddFavourite/@item.Id" class="btn btn-primary">Add favourite</a>
                <a href="/Comment/ViewComments/@item.Id" class="btn btn-primary">Read comments</a>
                    <a href="/Comment/CreateComment/@item.Id" class="btn btn-primary">Create comment</a>
                   
            </td>
        </tr>
}       
    </tbody>
</table>
 <form asp-controller="Topic" asp-action="ShowMyComments" method="post">
     <input type="submit" value="Comments related posts" class="btn btn-primary" />
 </form>


<script>
    // Check if there's an existing WebSocket connection stored in sessionStorage
    let socketUrl = sessionStorage.getItem('socketUrl');
    let socket;
    let storedValue = localStorage.getItem('pTagValue');

    var userId = @Html.Raw(Json.Serialize(ViewBag.Number));

    // If a value exists in localStorage, set the <p> tag text to it
    if (storedValue) {
        document.getElementById('webSocketResponse').innerHTML = storedValue;
    }
    console.log("yeah");
    if (socketUrl) {
        socket = new WebSocket(socketUrl); // Reuse the existing WebSocket connection
    } else {
        socket = new WebSocket("wss://localhost:7062/ws"); // Create a new WebSocket connection
    }

    // Store the WebSocket connection URL in sessionStorage
    sessionStorage.setItem('socketUrl', socket.url);

    // Add event listeners
    socket.onopen = (event) => {
        console.log("WebSocket connection established.");
    };

    socket.onmessage = (event) => {
        var data = event.data;
        var numbers = data.split(",").map(function (num) {
            return parseInt(num, 10);
        });
        numbers.forEach(function (num) {
            console.log(num);
            console.log(userId);
            if (num === userId) {
                console.log("siker");
                document.getElementById("webSocketResponse").innerHTML = "There is a new commment"
            }
            
        });
    };

    socket.onclose = (event) => {
        if (event.wasClean) {
            console.log(`WebSocket connection closed cleanly, code=${event.code}, reason=${event.reason}`);
        } else {
            console.error(`WebSocket connection died`);
        }
    };
    function sendMessage(message) {
        socket.send(message);
    }

    function myfunc() { 
        document.getElementById("webSocketResponse").innerHTML = "";
    }
</script>


